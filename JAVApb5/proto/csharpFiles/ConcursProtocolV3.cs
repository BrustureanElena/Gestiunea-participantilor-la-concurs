// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ConcursProtocol_v3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Concurs.Protocol {

  /// <summary>Holder for reflection information generated from ConcursProtocol_v3.proto</summary>
  public static partial class ConcursProtocolV3Reflection {

    #region Descriptor
    /// <summary>File descriptor for ConcursProtocol_v3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConcursProtocolV3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhDb25jdXJzUHJvdG9jb2xfdjMucHJvdG8SEGNvbmN1cnMucHJvdG9jb2wi",
            "PQoNQW5nYWphdE9maWNpdRIQCgh1c2VybmFtZRgBIAEoCRIOCgZwYXJvbGEY",
            "AiABKAkSCgoCaWQYAyABKAMicwoJSW5zY3JpZXJlEjIKC3BhcnRpY2lwYW50",
            "GAEgASgLMh0uY29uY3Vycy5wcm90b2NvbC5QYXJ0aWNpcGFudBImCgVwcm9i",
            "YRgCIAEoCzIXLmNvbmN1cnMucHJvdG9jb2wuUHJvYmESCgoCaWQYAyABKAMi",
            "SAoLUGFydGljaXBhbnQSDAoEbnVtZRgBIAEoCRIPCgdwcmVudW1lGAIgASgJ",
            "Eg4KBnZhcnN0YRgDIAEoCRIKCgJpZBgEIAEoAyJLCgVQcm9iYRIQCghkZW51",
            "bWlyZRgBIAEoCRIRCgl2YXJzdGFNaW4YAiABKAkSEQoJdmFyc3RhTWF4GAMg",
            "ASgJEgoKAmlkGAQgASgDImYKCFByb2JhRFRPEhAKCGRlbnVtaXJlGAEgASgJ",
            "EhEKCXZhcnN0YU1pbhgCIAEoCRIRCgl2YXJzdGFNYXgYAyABKAkSFgoObnJQ",
            "YXJ0aWNpcGFudGkYBCABKAkSCgoCaWQYBSABKAMi1AIKDkNvbmN1cnNSZXF1",
            "ZXN0EjMKBHR5cGUYASABKA4yJS5jb25jdXJzLnByb3RvY29sLkNvbmN1cnNS",
            "ZXF1ZXN0LlR5cGUSOAoNYW5nYWphdE9maWNpdRgCIAEoCzIfLmNvbmN1cnMu",
            "cHJvdG9jb2wuQW5nYWphdE9maWNpdUgAEjAKCWluc2NyaWVyZRgDIAEoCzIb",
            "LmNvbmN1cnMucHJvdG9jb2wuSW5zY3JpZXJlSAASKAoFcHJvYmEYBCABKAsy",
            "Fy5jb25jdXJzLnByb3RvY29sLlByb2JhSAAibAoEVHlwZRIKCgZVbmtvd24Q",
            "ABIJCgVMb2dpbhABEgsKB0luc2NyaWUQAhIVChFDYXV0YVBhcnRpY2lwYW50",
            "aRADEgwKCEdldFByb2JlEAQSCgoGTG9nb3V0EAUSDwoLR2V0UHJvYmVEVE8Q",
            "BkIJCgdwYXlsb2FkIs4DCg9Db25jdXJzUmVzcG9uc2USNAoEdHlwZRgBIAEo",
            "DjImLmNvbmN1cnMucHJvdG9jb2wuQ29uY3Vyc1Jlc3BvbnNlLlR5cGUSDQoF",
            "ZXJyb3IYAiABKAkSLgoJaW5zY3JpZXJlGAMgASgLMhsuY29uY3Vycy5wcm90",
            "b2NvbC5JbnNjcmllcmUSNgoNYW5nYWphdE9maWNpdRgEIAEoCzIfLmNvbmN1",
            "cnMucHJvdG9jb2wuQW5nYWphdE9maWNpdRIzCgxwYXJ0aWNpcGFudGkYBSAD",
            "KAsyHS5jb25jdXJzLnByb3RvY29sLlBhcnRpY2lwYW50EiYKBXByb2JhGAYg",
            "AygLMhcuY29uY3Vycy5wcm90b2NvbC5Qcm9iYRIsCghwcm9iYURUTxgHIAMo",
            "CzIaLmNvbmN1cnMucHJvdG9jb2wuUHJvYmFEVE8iggEKBFR5cGUSCgoGVW5r",
            "b3duEAASBgoCT2sQARIJCgVFcnJvchACEhYKEkluc2NyaWVyZVJlYWxpemF0",
            "YRADEgwKCExvZ2dlZEluEAQSFgoSUGFydGljaXBhbnRpR2FzaXRpEAUSDAoI",
            "R290UHJvYmUQBhIPCgtHb3RQcm9iZURUTxAHQjUKIWNvbmN1cnMubmV0d29y",
            "ay5wcm90b2J1ZmZwcm90b2NvbEIQQ29uY3Vyc1Byb3RvYnVmc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Concurs.Protocol.AngajatOficiu), global::Concurs.Protocol.AngajatOficiu.Parser, new[]{ "Username", "Parola", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Concurs.Protocol.Inscriere), global::Concurs.Protocol.Inscriere.Parser, new[]{ "Participant", "Proba", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Concurs.Protocol.Participant), global::Concurs.Protocol.Participant.Parser, new[]{ "Nume", "Prenume", "Varsta", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Concurs.Protocol.Proba), global::Concurs.Protocol.Proba.Parser, new[]{ "Denumire", "VarstaMin", "VarstaMax", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Concurs.Protocol.ProbaDTO), global::Concurs.Protocol.ProbaDTO.Parser, new[]{ "Denumire", "VarstaMin", "VarstaMax", "NrParticipanti", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Concurs.Protocol.ConcursRequest), global::Concurs.Protocol.ConcursRequest.Parser, new[]{ "Type", "AngajatOficiu", "Inscriere", "Proba" }, new[]{ "Payload" }, new[]{ typeof(global::Concurs.Protocol.ConcursRequest.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Concurs.Protocol.ConcursResponse), global::Concurs.Protocol.ConcursResponse.Parser, new[]{ "Type", "Error", "Inscriere", "AngajatOficiu", "Participanti", "Proba", "ProbaDTO" }, null, new[]{ typeof(global::Concurs.Protocol.ConcursResponse.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AngajatOficiu : pb::IMessage<AngajatOficiu> {
    private static readonly pb::MessageParser<AngajatOficiu> _parser = new pb::MessageParser<AngajatOficiu>(() => new AngajatOficiu());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AngajatOficiu> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Concurs.Protocol.ConcursProtocolV3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AngajatOficiu() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AngajatOficiu(AngajatOficiu other) : this() {
      username_ = other.username_;
      parola_ = other.parola_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AngajatOficiu Clone() {
      return new AngajatOficiu(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parola" field.</summary>
    public const int ParolaFieldNumber = 2;
    private string parola_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parola {
      get { return parola_; }
      set {
        parola_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AngajatOficiu);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AngajatOficiu other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Parola != other.Parola) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Parola.Length != 0) hash ^= Parola.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Parola.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parola);
      }
      if (Id != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Parola.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parola);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AngajatOficiu other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Parola.Length != 0) {
        Parola = other.Parola;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Parola = input.ReadString();
            break;
          }
          case 24: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Inscriere : pb::IMessage<Inscriere> {
    private static readonly pb::MessageParser<Inscriere> _parser = new pb::MessageParser<Inscriere>(() => new Inscriere());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Inscriere> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Concurs.Protocol.ConcursProtocolV3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Inscriere() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Inscriere(Inscriere other) : this() {
      participant_ = other.participant_ != null ? other.participant_.Clone() : null;
      proba_ = other.proba_ != null ? other.proba_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Inscriere Clone() {
      return new Inscriere(this);
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 1;
    private global::Concurs.Protocol.Participant participant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Concurs.Protocol.Participant Participant {
      get { return participant_; }
      set {
        participant_ = value;
      }
    }

    /// <summary>Field number for the "proba" field.</summary>
    public const int ProbaFieldNumber = 2;
    private global::Concurs.Protocol.Proba proba_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Concurs.Protocol.Proba Proba {
      get { return proba_; }
      set {
        proba_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Inscriere);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Inscriere other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Participant, other.Participant)) return false;
      if (!object.Equals(Proba, other.Proba)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (participant_ != null) hash ^= Participant.GetHashCode();
      if (proba_ != null) hash ^= Proba.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (participant_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Participant);
      }
      if (proba_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Proba);
      }
      if (Id != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (participant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participant);
      }
      if (proba_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proba);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Inscriere other) {
      if (other == null) {
        return;
      }
      if (other.participant_ != null) {
        if (participant_ == null) {
          Participant = new global::Concurs.Protocol.Participant();
        }
        Participant.MergeFrom(other.Participant);
      }
      if (other.proba_ != null) {
        if (proba_ == null) {
          Proba = new global::Concurs.Protocol.Proba();
        }
        Proba.MergeFrom(other.Proba);
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (participant_ == null) {
              Participant = new global::Concurs.Protocol.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
          case 18: {
            if (proba_ == null) {
              Proba = new global::Concurs.Protocol.Proba();
            }
            input.ReadMessage(Proba);
            break;
          }
          case 24: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Participant : pb::IMessage<Participant> {
    private static readonly pb::MessageParser<Participant> _parser = new pb::MessageParser<Participant>(() => new Participant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Participant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Concurs.Protocol.ConcursProtocolV3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Participant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Participant(Participant other) : this() {
      nume_ = other.nume_;
      prenume_ = other.prenume_;
      varsta_ = other.varsta_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Participant Clone() {
      return new Participant(this);
    }

    /// <summary>Field number for the "nume" field.</summary>
    public const int NumeFieldNumber = 1;
    private string nume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nume {
      get { return nume_; }
      set {
        nume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prenume" field.</summary>
    public const int PrenumeFieldNumber = 2;
    private string prenume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Prenume {
      get { return prenume_; }
      set {
        prenume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "varsta" field.</summary>
    public const int VarstaFieldNumber = 3;
    private string varsta_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Varsta {
      get { return varsta_; }
      set {
        varsta_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Participant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Participant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nume != other.Nume) return false;
      if (Prenume != other.Prenume) return false;
      if (Varsta != other.Varsta) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nume.Length != 0) hash ^= Nume.GetHashCode();
      if (Prenume.Length != 0) hash ^= Prenume.GetHashCode();
      if (Varsta.Length != 0) hash ^= Varsta.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nume.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Nume);
      }
      if (Prenume.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Prenume);
      }
      if (Varsta.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Varsta);
      }
      if (Id != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nume);
      }
      if (Prenume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prenume);
      }
      if (Varsta.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Varsta);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Participant other) {
      if (other == null) {
        return;
      }
      if (other.Nume.Length != 0) {
        Nume = other.Nume;
      }
      if (other.Prenume.Length != 0) {
        Prenume = other.Prenume;
      }
      if (other.Varsta.Length != 0) {
        Varsta = other.Varsta;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Nume = input.ReadString();
            break;
          }
          case 18: {
            Prenume = input.ReadString();
            break;
          }
          case 26: {
            Varsta = input.ReadString();
            break;
          }
          case 32: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Proba : pb::IMessage<Proba> {
    private static readonly pb::MessageParser<Proba> _parser = new pb::MessageParser<Proba>(() => new Proba());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Proba> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Concurs.Protocol.ConcursProtocolV3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Proba() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Proba(Proba other) : this() {
      denumire_ = other.denumire_;
      varstaMin_ = other.varstaMin_;
      varstaMax_ = other.varstaMax_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Proba Clone() {
      return new Proba(this);
    }

    /// <summary>Field number for the "denumire" field.</summary>
    public const int DenumireFieldNumber = 1;
    private string denumire_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Denumire {
      get { return denumire_; }
      set {
        denumire_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "varstaMin" field.</summary>
    public const int VarstaMinFieldNumber = 2;
    private string varstaMin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VarstaMin {
      get { return varstaMin_; }
      set {
        varstaMin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "varstaMax" field.</summary>
    public const int VarstaMaxFieldNumber = 3;
    private string varstaMax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VarstaMax {
      get { return varstaMax_; }
      set {
        varstaMax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Proba);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Proba other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Denumire != other.Denumire) return false;
      if (VarstaMin != other.VarstaMin) return false;
      if (VarstaMax != other.VarstaMax) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Denumire.Length != 0) hash ^= Denumire.GetHashCode();
      if (VarstaMin.Length != 0) hash ^= VarstaMin.GetHashCode();
      if (VarstaMax.Length != 0) hash ^= VarstaMax.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Denumire.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Denumire);
      }
      if (VarstaMin.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VarstaMin);
      }
      if (VarstaMax.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VarstaMax);
      }
      if (Id != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Denumire.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Denumire);
      }
      if (VarstaMin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VarstaMin);
      }
      if (VarstaMax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VarstaMax);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Proba other) {
      if (other == null) {
        return;
      }
      if (other.Denumire.Length != 0) {
        Denumire = other.Denumire;
      }
      if (other.VarstaMin.Length != 0) {
        VarstaMin = other.VarstaMin;
      }
      if (other.VarstaMax.Length != 0) {
        VarstaMax = other.VarstaMax;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Denumire = input.ReadString();
            break;
          }
          case 18: {
            VarstaMin = input.ReadString();
            break;
          }
          case 26: {
            VarstaMax = input.ReadString();
            break;
          }
          case 32: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProbaDTO : pb::IMessage<ProbaDTO> {
    private static readonly pb::MessageParser<ProbaDTO> _parser = new pb::MessageParser<ProbaDTO>(() => new ProbaDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProbaDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Concurs.Protocol.ConcursProtocolV3Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbaDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbaDTO(ProbaDTO other) : this() {
      denumire_ = other.denumire_;
      varstaMin_ = other.varstaMin_;
      varstaMax_ = other.varstaMax_;
      nrParticipanti_ = other.nrParticipanti_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbaDTO Clone() {
      return new ProbaDTO(this);
    }

    /// <summary>Field number for the "denumire" field.</summary>
    public const int DenumireFieldNumber = 1;
    private string denumire_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Denumire {
      get { return denumire_; }
      set {
        denumire_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "varstaMin" field.</summary>
    public const int VarstaMinFieldNumber = 2;
    private string varstaMin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VarstaMin {
      get { return varstaMin_; }
      set {
        varstaMin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "varstaMax" field.</summary>
    public const int VarstaMaxFieldNumber = 3;
    private string varstaMax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VarstaMax {
      get { return varstaMax_; }
      set {
        varstaMax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nrParticipanti" field.</summary>
    public const int NrParticipantiFieldNumber = 4;
    private string nrParticipanti_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NrParticipanti {
      get { return nrParticipanti_; }
      set {
        nrParticipanti_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProbaDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProbaDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Denumire != other.Denumire) return false;
      if (VarstaMin != other.VarstaMin) return false;
      if (VarstaMax != other.VarstaMax) return false;
      if (NrParticipanti != other.NrParticipanti) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Denumire.Length != 0) hash ^= Denumire.GetHashCode();
      if (VarstaMin.Length != 0) hash ^= VarstaMin.GetHashCode();
      if (VarstaMax.Length != 0) hash ^= VarstaMax.GetHashCode();
      if (NrParticipanti.Length != 0) hash ^= NrParticipanti.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Denumire.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Denumire);
      }
      if (VarstaMin.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VarstaMin);
      }
      if (VarstaMax.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VarstaMax);
      }
      if (NrParticipanti.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NrParticipanti);
      }
      if (Id != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Denumire.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Denumire);
      }
      if (VarstaMin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VarstaMin);
      }
      if (VarstaMax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VarstaMax);
      }
      if (NrParticipanti.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NrParticipanti);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProbaDTO other) {
      if (other == null) {
        return;
      }
      if (other.Denumire.Length != 0) {
        Denumire = other.Denumire;
      }
      if (other.VarstaMin.Length != 0) {
        VarstaMin = other.VarstaMin;
      }
      if (other.VarstaMax.Length != 0) {
        VarstaMax = other.VarstaMax;
      }
      if (other.NrParticipanti.Length != 0) {
        NrParticipanti = other.NrParticipanti;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Denumire = input.ReadString();
            break;
          }
          case 18: {
            VarstaMin = input.ReadString();
            break;
          }
          case 26: {
            VarstaMax = input.ReadString();
            break;
          }
          case 34: {
            NrParticipanti = input.ReadString();
            break;
          }
          case 40: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConcursRequest : pb::IMessage<ConcursRequest> {
    private static readonly pb::MessageParser<ConcursRequest> _parser = new pb::MessageParser<ConcursRequest>(() => new ConcursRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConcursRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Concurs.Protocol.ConcursProtocolV3Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcursRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcursRequest(ConcursRequest other) : this() {
      type_ = other.type_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.AngajatOficiu:
          AngajatOficiu = other.AngajatOficiu.Clone();
          break;
        case PayloadOneofCase.Inscriere:
          Inscriere = other.Inscriere.Clone();
          break;
        case PayloadOneofCase.Proba:
          Proba = other.Proba.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcursRequest Clone() {
      return new ConcursRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Concurs.Protocol.ConcursRequest.Types.Type type_ = global::Concurs.Protocol.ConcursRequest.Types.Type.Unkown;
    /// <summary>
    /// Identifies which request is filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Concurs.Protocol.ConcursRequest.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "angajatOficiu" field.</summary>
    public const int AngajatOficiuFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Concurs.Protocol.AngajatOficiu AngajatOficiu {
      get { return payloadCase_ == PayloadOneofCase.AngajatOficiu ? (global::Concurs.Protocol.AngajatOficiu) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.AngajatOficiu;
      }
    }

    /// <summary>Field number for the "inscriere" field.</summary>
    public const int InscriereFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Concurs.Protocol.Inscriere Inscriere {
      get { return payloadCase_ == PayloadOneofCase.Inscriere ? (global::Concurs.Protocol.Inscriere) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Inscriere;
      }
    }

    /// <summary>Field number for the "proba" field.</summary>
    public const int ProbaFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Concurs.Protocol.Proba Proba {
      get { return payloadCase_ == PayloadOneofCase.Proba ? (global::Concurs.Protocol.Proba) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Proba;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      AngajatOficiu = 2,
      Inscriere = 3,
      Proba = 4,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConcursRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConcursRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(AngajatOficiu, other.AngajatOficiu)) return false;
      if (!object.Equals(Inscriere, other.Inscriere)) return false;
      if (!object.Equals(Proba, other.Proba)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Concurs.Protocol.ConcursRequest.Types.Type.Unkown) hash ^= Type.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.AngajatOficiu) hash ^= AngajatOficiu.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Inscriere) hash ^= Inscriere.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Proba) hash ^= Proba.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Concurs.Protocol.ConcursRequest.Types.Type.Unkown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.AngajatOficiu) {
        output.WriteRawTag(18);
        output.WriteMessage(AngajatOficiu);
      }
      if (payloadCase_ == PayloadOneofCase.Inscriere) {
        output.WriteRawTag(26);
        output.WriteMessage(Inscriere);
      }
      if (payloadCase_ == PayloadOneofCase.Proba) {
        output.WriteRawTag(34);
        output.WriteMessage(Proba);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Concurs.Protocol.ConcursRequest.Types.Type.Unkown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.AngajatOficiu) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AngajatOficiu);
      }
      if (payloadCase_ == PayloadOneofCase.Inscriere) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inscriere);
      }
      if (payloadCase_ == PayloadOneofCase.Proba) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proba);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConcursRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Concurs.Protocol.ConcursRequest.Types.Type.Unkown) {
        Type = other.Type;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.AngajatOficiu:
          if (AngajatOficiu == null) {
            AngajatOficiu = new global::Concurs.Protocol.AngajatOficiu();
          }
          AngajatOficiu.MergeFrom(other.AngajatOficiu);
          break;
        case PayloadOneofCase.Inscriere:
          if (Inscriere == null) {
            Inscriere = new global::Concurs.Protocol.Inscriere();
          }
          Inscriere.MergeFrom(other.Inscriere);
          break;
        case PayloadOneofCase.Proba:
          if (Proba == null) {
            Proba = new global::Concurs.Protocol.Proba();
          }
          Proba.MergeFrom(other.Proba);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Concurs.Protocol.ConcursRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Concurs.Protocol.AngajatOficiu subBuilder = new global::Concurs.Protocol.AngajatOficiu();
            if (payloadCase_ == PayloadOneofCase.AngajatOficiu) {
              subBuilder.MergeFrom(AngajatOficiu);
            }
            input.ReadMessage(subBuilder);
            AngajatOficiu = subBuilder;
            break;
          }
          case 26: {
            global::Concurs.Protocol.Inscriere subBuilder = new global::Concurs.Protocol.Inscriere();
            if (payloadCase_ == PayloadOneofCase.Inscriere) {
              subBuilder.MergeFrom(Inscriere);
            }
            input.ReadMessage(subBuilder);
            Inscriere = subBuilder;
            break;
          }
          case 34: {
            global::Concurs.Protocol.Proba subBuilder = new global::Concurs.Protocol.Proba();
            if (payloadCase_ == PayloadOneofCase.Proba) {
              subBuilder.MergeFrom(Proba);
            }
            input.ReadMessage(subBuilder);
            Proba = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ConcursRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unkown")] Unkown = 0,
        [pbr::OriginalName("Login")] Login = 1,
        [pbr::OriginalName("Inscrie")] Inscrie = 2,
        [pbr::OriginalName("CautaParticipanti")] CautaParticipanti = 3,
        [pbr::OriginalName("GetProbe")] GetProbe = 4,
        [pbr::OriginalName("Logout")] Logout = 5,
        [pbr::OriginalName("GetProbeDTO")] GetProbeDto = 6,
      }

    }
    #endregion

  }

  public sealed partial class ConcursResponse : pb::IMessage<ConcursResponse> {
    private static readonly pb::MessageParser<ConcursResponse> _parser = new pb::MessageParser<ConcursResponse>(() => new ConcursResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConcursResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Concurs.Protocol.ConcursProtocolV3Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcursResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcursResponse(ConcursResponse other) : this() {
      type_ = other.type_;
      error_ = other.error_;
      inscriere_ = other.inscriere_ != null ? other.inscriere_.Clone() : null;
      angajatOficiu_ = other.angajatOficiu_ != null ? other.angajatOficiu_.Clone() : null;
      participanti_ = other.participanti_.Clone();
      proba_ = other.proba_.Clone();
      probaDTO_ = other.probaDTO_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcursResponse Clone() {
      return new ConcursResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Concurs.Protocol.ConcursResponse.Types.Type type_ = global::Concurs.Protocol.ConcursResponse.Types.Type.Unkown;
    /// <summary>
    /// Identifies which request is filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Concurs.Protocol.ConcursResponse.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    /// <summary>
    /// One of the following will be filled in, depending on the type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inscriere" field.</summary>
    public const int InscriereFieldNumber = 3;
    private global::Concurs.Protocol.Inscriere inscriere_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Concurs.Protocol.Inscriere Inscriere {
      get { return inscriere_; }
      set {
        inscriere_ = value;
      }
    }

    /// <summary>Field number for the "angajatOficiu" field.</summary>
    public const int AngajatOficiuFieldNumber = 4;
    private global::Concurs.Protocol.AngajatOficiu angajatOficiu_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Concurs.Protocol.AngajatOficiu AngajatOficiu {
      get { return angajatOficiu_; }
      set {
        angajatOficiu_ = value;
      }
    }

    /// <summary>Field number for the "participanti" field.</summary>
    public const int ParticipantiFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Concurs.Protocol.Participant> _repeated_participanti_codec
        = pb::FieldCodec.ForMessage(42, global::Concurs.Protocol.Participant.Parser);
    private readonly pbc::RepeatedField<global::Concurs.Protocol.Participant> participanti_ = new pbc::RepeatedField<global::Concurs.Protocol.Participant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Concurs.Protocol.Participant> Participanti {
      get { return participanti_; }
    }

    /// <summary>Field number for the "proba" field.</summary>
    public const int ProbaFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Concurs.Protocol.Proba> _repeated_proba_codec
        = pb::FieldCodec.ForMessage(50, global::Concurs.Protocol.Proba.Parser);
    private readonly pbc::RepeatedField<global::Concurs.Protocol.Proba> proba_ = new pbc::RepeatedField<global::Concurs.Protocol.Proba>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Concurs.Protocol.Proba> Proba {
      get { return proba_; }
    }

    /// <summary>Field number for the "probaDTO" field.</summary>
    public const int ProbaDTOFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Concurs.Protocol.ProbaDTO> _repeated_probaDTO_codec
        = pb::FieldCodec.ForMessage(58, global::Concurs.Protocol.ProbaDTO.Parser);
    private readonly pbc::RepeatedField<global::Concurs.Protocol.ProbaDTO> probaDTO_ = new pbc::RepeatedField<global::Concurs.Protocol.ProbaDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Concurs.Protocol.ProbaDTO> ProbaDTO {
      get { return probaDTO_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConcursResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConcursResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Error != other.Error) return false;
      if (!object.Equals(Inscriere, other.Inscriere)) return false;
      if (!object.Equals(AngajatOficiu, other.AngajatOficiu)) return false;
      if(!participanti_.Equals(other.participanti_)) return false;
      if(!proba_.Equals(other.proba_)) return false;
      if(!probaDTO_.Equals(other.probaDTO_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Concurs.Protocol.ConcursResponse.Types.Type.Unkown) hash ^= Type.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (inscriere_ != null) hash ^= Inscriere.GetHashCode();
      if (angajatOficiu_ != null) hash ^= AngajatOficiu.GetHashCode();
      hash ^= participanti_.GetHashCode();
      hash ^= proba_.GetHashCode();
      hash ^= probaDTO_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Concurs.Protocol.ConcursResponse.Types.Type.Unkown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (inscriere_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Inscriere);
      }
      if (angajatOficiu_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AngajatOficiu);
      }
      participanti_.WriteTo(output, _repeated_participanti_codec);
      proba_.WriteTo(output, _repeated_proba_codec);
      probaDTO_.WriteTo(output, _repeated_probaDTO_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Concurs.Protocol.ConcursResponse.Types.Type.Unkown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (inscriere_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inscriere);
      }
      if (angajatOficiu_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AngajatOficiu);
      }
      size += participanti_.CalculateSize(_repeated_participanti_codec);
      size += proba_.CalculateSize(_repeated_proba_codec);
      size += probaDTO_.CalculateSize(_repeated_probaDTO_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConcursResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Concurs.Protocol.ConcursResponse.Types.Type.Unkown) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.inscriere_ != null) {
        if (inscriere_ == null) {
          Inscriere = new global::Concurs.Protocol.Inscriere();
        }
        Inscriere.MergeFrom(other.Inscriere);
      }
      if (other.angajatOficiu_ != null) {
        if (angajatOficiu_ == null) {
          AngajatOficiu = new global::Concurs.Protocol.AngajatOficiu();
        }
        AngajatOficiu.MergeFrom(other.AngajatOficiu);
      }
      participanti_.Add(other.participanti_);
      proba_.Add(other.proba_);
      probaDTO_.Add(other.probaDTO_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Concurs.Protocol.ConcursResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            if (inscriere_ == null) {
              Inscriere = new global::Concurs.Protocol.Inscriere();
            }
            input.ReadMessage(Inscriere);
            break;
          }
          case 34: {
            if (angajatOficiu_ == null) {
              AngajatOficiu = new global::Concurs.Protocol.AngajatOficiu();
            }
            input.ReadMessage(AngajatOficiu);
            break;
          }
          case 42: {
            participanti_.AddEntriesFrom(input, _repeated_participanti_codec);
            break;
          }
          case 50: {
            proba_.AddEntriesFrom(input, _repeated_proba_codec);
            break;
          }
          case 58: {
            probaDTO_.AddEntriesFrom(input, _repeated_probaDTO_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ConcursResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unkown")] Unkown = 0,
        [pbr::OriginalName("Ok")] Ok = 1,
        [pbr::OriginalName("Error")] Error = 2,
        [pbr::OriginalName("InscriereRealizata")] InscriereRealizata = 3,
        [pbr::OriginalName("LoggedIn")] LoggedIn = 4,
        [pbr::OriginalName("ParticipantiGasiti")] ParticipantiGasiti = 5,
        [pbr::OriginalName("GotProbe")] GotProbe = 6,
        [pbr::OriginalName("GotProbeDTO")] GotProbeDto = 7,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
